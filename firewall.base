#!/bin/bash

# # # # # # # # # # # # # # # #
# Magne Firewall base script  #
# # # # # # # # # # # # # # # #

MUNIN=0
MUNIN_PLUGINS_PATH_FROM='/usr/share/munin/plugins'
MUNIN_PLUGINS_PATH_TO='/etc/munin/plugins'
MUNIN_NODE_RESTART_CMD='/etc/init.d/munin-node restart'

set -ex

IPT=/sbin/iptables
#IP6T=/sbin/ip6tables
IPT_SAVE=/sbin/iptables-save

# BEGIN WAN

WAN={wan}
WAN_IP={wan_ip}

# END WAN
# BEGIN LAN

LAN={lan}
LAN_IP={lan_ip}
LAN_R={lan_r}

# END LAN
# BEGIN CLIENTS

CLIENTS=(
{clients}
)

CLIENTS_U=(
{clients_u}
)

# END CLIENTS
# BEGIN CLIENTS PORTS

{clients_ports}

CLIENTS_TCP_PORTS="
{clients_tcp_ports}
"
CLIENTS_UDP_PORTS="
{clients_udp_ports}
"

# END CLIENTS PORTS
# BEGIN SERVICES PORTS

{services_ports}

SERVICES_TCP_PORTS="
{services_tcp_ports}
"
SERVICES_UDP_PORTS="
{services_udp_ports}
"

# END SERVICES PORTS
# BEGIN RESTRICTED SERVICES PORTS

{restricted_services_ports}

RESTRICTED_SERVICES_TCP_PORTS="
{restricted_services_tcp_ports}
"
RESTRICTED_SERVICES_UDP_PORTS="
{restricted_services_udp_ports}
"

# END RESTRICTED SERVICES PORTS
# BEGIN PORT FORWARDING

FORWARD_RULES=(
{forward_rules}
)

# END PORT FORWARDING
# BEGIN SPAMMERS

SPAMMERS="
213.5.66.88
195.168.109.60
202.79.186.47
79.142.55.199
94.125.27.20
195.134.114.70
"

# END SPAMMERS

TMP_FILE=$(mktemp)
$IPT_SAVE -c > $TMP_FILE

# BEGIN START

start() {{

  ##################
  #  Kernel stuff  #
  ##################

  echo 1 > /proc/sys/net/ipv4/ip_forward
  # for f in /proc/sys/net/ipv4/conf/*/rp_filter ; do echo 1 > $f ; done
  echo 0 > /proc/sys/net/ipv6/conf/all/forwarding

  ##################
  #    Policies    #
  ##################

  $IPT  -P INPUT DROP
  $IPT  -P FORWARD DROP
  #$IP6T -P INPUT DROP
  #$IP6T -P FORWARD DROP

  ##################
  #     Rules      #
  ##################

  $IPT  -N INVALID
  #$IP6T -N INVALID

  #################
  # Services & co #
  #################

  # Allow LOOP !
  $IPT -A INPUT -i lo -j ACCEPT

  # ICMP : ping request
  $IPT -A INPUT -p icmp --icmp-type ping -m limit --limit 5/s -j LOG --log-prefix "[PING4] "
  $IPT -A INPUT ! -i $WAN -p icmp --icmp-type ping -m limit --limit 10/s -j ACCEPT
  $IPT -A INPUT ! -i $WAN -p icmp -j DROP

  # Invalid stuff
  $IPT -A INPUT -p tcp --tcp-flags ALL NONE -j INVALID
  $IPT -A INPUT -d 0.0.0.0 -j INVALID

  # Don't touch to the established connections !
  $IPT -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
  $IPT -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT

  # Invalid second part
  $IPT -A INPUT -p tcp --tcp-flags ACK,SYN ACK,SYN -m state --state NEW -j INVALID

  # SSH
  $IPT -A INPUT -p tcp --dport 22 -m limit --limit 3/minute -m state --state NEW -j ACCEPT

  # Generic services
  for s_tcp_ports in $SERVICES_TCP_PORTS; do $IPT -A INPUT -p tcp -i $LAN -s $LAN_R -m multiport --dports $s_tcp_ports -m state --state NEW -j ACCEPT; done
  for s_udp_ports in $SERVICES_UDP_PORTS; do $IPT -A INPUT -p udp -i $LAN -s $LAN_R -m multiport --dports $s_udp_ports -m state --state NEW -j ACCEPT; done
  
  ################
  #    Router    #
  ################

  # Suppressions des liens munin des clients (wipe)
  if [ "$MUNIN" -eq "1" -a -d "$MUNIN_PLUGINS_PATH_FROM" -a -d "$MUNIN_PLUGINS_PATH_TO" ]; then
    rm -fr "$MUNIN_PLUGINS_PATH_TO/client_*"
  fi

  # Classic clients
  OIFS=$IFS; for i in ${{CLIENTS[*]}}; do IFS='!'; set $i; NAME=$1; MACS=$2; IFS=','; for MAC in $MACS; do IFS=$OIFS
    COUNTER=$(grep -i -e "$MAC" $TMP_FILE | cut -f -1 -d " " | tr -d "[]")
    PACKET_COUNTER=$(echo $COUNTER | cut -f 1 -d ":" | awk '{{SUM += $1}} END {{ print SUM; }}')
    BIT_COUNTER=$(echo $COUNTER | cut -f 2 -d ":" | awk '{{SUM += $1}} END {{ print SUM; }}')

    if [ ! -z "$PACKET_COUNTER" -o ! -z "$BIT_COUNTER" ]; then
      $IPT -I FORWARD -m mac --mac-source $MAC -c $PACKET_COUNTER $BIT_COUNTER;
    else
      $IPT -I FORWARD -m mac --mac-source $MAC;
    fi

    if [ "$MUNIN" -eq "1" -a -d "$MUNIN_PLUGINS_PATH_FROM" -a -d "$MUNIN_PLUGINS_PATH_TO" ]; then
      FILE_NAME_IP="$( echo $NAME | sed 's~/~_~g' )"
      ln -fs "$MUNIN_PLUGINS_PATH_FROM/client_" "$MUNIN_PLUGINS_PATH_TO/client_$NAME"
    fi
    for c_tcp_ports in $CLIENTS_TCP_PORTS; do $IPT -A FORWARD -i $LAN -o $WAN -p tcp -m mac --mac-source $MAC -m multiport --dports $c_tcp_ports -m state --state NEW -m comment --comment "$NAME" -j ACCEPT; done
    for c_udp_ports in $CLIENTS_UDP_PORTS; do $IPT -A FORWARD -i $LAN -o $WAN -p udp -m mac --mac-source $MAC -m multiport --dports $c_udp_ports -m state --state NEW -m comment --comment "$NAME" -j ACCEPT; done
    # Restricted services
    for rs_tcp_ports in $RESTRICTED_SERVICES_TCP_PORTS; do $IPT -A INPUT -i $LAN -s $LAN_R -p tcp -m mac --mac-source $MAC -m multiport --dports $rs_tcp_ports -m state --state NEW -j ACCEPT; done
    for rs_udp_ports in $RESTRICTED_SERVICES_UDP_PORTS; do $IPT -A INPUT -i $LAN -s $LAN_R -p udp -m mac --mac-source $MAC -m multiport --dports $rs_udp_ports -m state --state NEW -j ACCEPT; done
    # ICMP
    $IPT -A FORWARD -i $LAN -p icmp --icmp-type ping -m mac --mac-source $MAC -m limit --limit 10/s -j ACCEPT
   done
  done

  # Unrestricted clients
  OIFS=$IFS; for i in ${{CLIENTS_U[*]}}; do IFS='!'; set $i; NAME=$1; MACS=$2; IFS=','; for MAC in $MACS; do IFS=$OIFS
    COUNTER=$(grep -i -e "$MAC" $TMP_FILE | cut -f -1 -d " " | tr -d "[]")
    PACKET_COUNTER=$(echo $COUNTER | cut -f 1 -d ":" | awk '{{SUM += $1}} END {{ print SUM; }}')
    BIT_COUNTER=$(echo $COUNTER | cut -f 2 -d ":" | awk '{{SUM += $1}} END {{ print SUM; }}')

    if [ ! -z "$PACKET_COUNTER" -o ! -z "$BIT_COUNTER" ]; then
      $IPT -I FORWARD -m mac --mac-source $MAC -c $PACKET_COUNTER $BIT_COUNTER;
    else
      $IPT -I FORWARD -m mac --mac-source $MAC;
    fi

    if [ "$MUNIN" -eq "1" -a -d "$MUNIN_PLUGINS_PATH_FROM" -a -d "$MUNIN_PLUGINS_PATH_TO" ]; then
      FILE_NAME_IP="$( echo $NAME | sed 's~/~_~g' )"
      ln -fs "$MUNIN_PLUGINS_PATH_FROM/client_" "$MUNIN_PLUGINS_PATH_TO/client_$NAME"
    fi
    $IPT -A FORWARD -i $LAN -o $WAN -m mac --mac-source $MAC -m state --state NEW -m comment --comment "$NAME" -j ACCEPT
    # Services
    $IPT -A INPUT -i $LAN -s $LAN_R -m mac --mac-source $MAC -m state --state NEW -m comment --comment "$NAME" -j ACCEPT
    # ICMP
    $IPT -A FORWARD -i $LAN -p icmp --icmp-type ping -m mac --mac-source $MAC -m limit --limit 10/s -j ACCEPT
   done
  done

  # Forwarding
  OIFS=$IFS; for i in ${{FORWARD_RULES[*]}}; do IFS='!'; set $i; PORT_FROM=$1; TO=$2; IFS=':'; set $TO; IP_TO=$1; PORT_TO=$2; IFS=$OIFS
    $IPT -t nat -A PREROUTING -d $WAN_IP -p tcp -i $WAN --dport $PORT_FROM -j DNAT --to $IP_TO:$PORT_TO
    $IPT -A FORWARD -p tcp -i $WAN -d $IP_TO --dport $PORT_TO -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
    $IPT -t nat -A POSTROUTING -p tcp -j SNAT -o $LAN --dport $PORT_TO --to-source $LAN_IP
  done

  # CUSTOM RULES : VLAN administration
  $IPT -A FORWARD -i eth3.10 -o $WAN -s 10.10.0.0/24 -m state --state NEW -j ACCEPT

  # NAT
  $IPT -t nat -A POSTROUTING -j SNAT -o $WAN --to-source $WAN_IP
  
  ################
  #   Spammers   #
  ################
  
  if [ "$SPAMMERS" ]
  then
    for ip in $SPAMMERS; do $IPT -A INPUT -i $WAN -s $ip -j DROP; done
    unset ip
  fi
  
  ################
  #   Invalid    #
  ################

  $IPT -A INVALID -j LOG --log-prefix "[INV4] "
  $IPT -A INVALID -j DROP

  ################
  #     Log      #
  ################

  $IPT -A INPUT -j LOG --log-prefix "[DROP4] "
  $IPT -A FORWARD -j LOG --log-prefix "[FW4] "
  #$IP6T -A INPUT -j LOG --log-prefix "[DROP6] "
  #$IP6T -A FORWARD -j LOG --log-prefix "[FW6] "

}}

# END START
# BEGIN STOP

stop() {{
  # Kernel stuff
  echo 0 > /proc/sys/net/ipv4/ip_forward
  # for f in /proc/sys/net/ipv4/conf/*/rp_filter ; do echo 0 > $f ; done
  echo 0 > /proc/sys/net/ipv6/conf/all/forwarding

  # Flush
  $IPT  -F INPUT
  $IPT  -F OUTPUT
  $IPT  -F FORWARD
  $IPT  -F INVALID
  #$IP6T -F INPUT
  #$IP6T -F OUTPUT
  #$IP6T -F FORWARD
  #$IP6T -F INVALID
  $IPT  -t nat -F

  # Delete chains
  $IPT  -X INVALID
  #$IP6T -X INVALID

  # Default policy
  $IPT  -P INPUT ACCEPT
  $IPT  -P OUTPUT ACCEPT
  $IPT  -P FORWARD ACCEPT
  #$IP6T -P INPUT ACCEPT
  #$IP6T -P OUTPUT ACCEPT
  #$IP6T -P FORWARD ACCEPT

  $IPT -t nat -P PREROUTING ACCEPT
  $IPT -t nat -P POSTROUTING ACCEPT
  $IPT -t nat -P OUTPUT ACCEPT
}}

# END STOP

case $1 in
  start)
    start
    ;;
  restart)
    stop
    start
    ;;
  stop)
    stop
    ;;
esac

rm $TMP_FILE

# Restart munin-node if needed
if [ "$MUNIN" -eq "1" -a -d "$MUNIN_PLUGINS_PATH_FROM" -a -d "$MUNIN_PLUGINS_PATH_TO" ]; then
  $MUNIN_NODE_RESTART_CMD
fi

exit 0
